# Dockerfile para el entorno de trabajo en Ubuntu.
# Imagen base de ubuntu:
FROM ubuntu:24.04

# Evita prompts interactivos:
ENV DEBIAN_FRONTEND=noninteractive

# Establecemos el 치rea de trabajo:
WORKDIR /mainDir

# Copiamos el script de inicio del contenedor:
COPY init-UbuntuContainer.sh /bin/init-UbuntuContainer.sh

# Actualiza e instala herramientas b치sicas y Python
RUN apt-get update && apt-get upgrade -y && \
    apt-get install -y \
    build-essential \
    curl \
    git \
    wget \
    vim \
    nano \
    python3.12 \
    python3.12-venv \
    python3-pip \
    locales \
    tzdata && \
    # Configura locale en_US.UTF-8
    locale-gen en_US.UTF-8 && \
    update-locale LANG=en_US.UTF-8 && \
    # Configura timezone America/Mexico_City
    ln -fs /usr/share/zoneinfo/America/Mexico_City /etc/localtime && \
    dpkg-reconfigure -f noninteractive tzdata && \
    # Crea un virtual environment
    python3.12 -m venv /mainDir/venv && \
    # Limpieza
    apt-get clean && rm -rf /var/lib/apt/lists/* && \
    # Otorgamos permisos de ejecuci칩n al script de inicio:
    chmod +x /bin/init-UbuntuContainer.sh

# Establecemos las variables de entorno para el locale
ENV LANG=en_US.UTF-8
ENV LANGUAGE=en_US:en
ENV LC_ALL=en_US.UTF-8

# Activamos el virtualenv por defecto (para CMD, entrypoint, etc.)
ENV VIRTUAL_ENV=/mainDir/venv
ENV PATH="$VIRTUAL_ENV/bin:$PATH"

# Exponemos el puerto con la m치quina host:
EXPOSE 8000

# Comando por defecto
CMD [ "/bin/init-UbuntuContainer.sh" ]
